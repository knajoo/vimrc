function! s:LoadBundles()

" 読み込むプラグインの指定
" NeoBundle よるプラグインのロードと各プラグインの初期化
	NeoBundle 'Shougo/neobundle.vim'

" Align : 高機能整形・桁揃えプラグイン
	NeoBundle 'Align'

" ステータスラインをリッチにする
	NeoBundle 'Lokaltog/vim-powerline'
" emmet
	NeoBundle 'mattn/emmet-vim'

	NeoBundle 'tpope/vim-surround'
	NeoBundle 'tpope/vim-repeat'
	NeoBundle 'Shougo/neocomplcache.vim'
	NeoBundle 'Shougo/neosnippet'

" syntax check
	NeoBundle 'scrooloose/syntastic'
	NeoBundle 'taichouchou2/html5.vim'
	NeoBundle 'hail2u/vim-css3-syntax'
	NeoBundleLazy 'jelera/vim-javascript-syntax', {'autoload':{'filetypes':['javascript']}}


" autoclose
	NeoBundle 'Townk/vim-autoclose'
" ruby shell 等のキーワード保管
	NeoBundle 'alpaca-tc/vim-endwise.git'
" vim-over
	NeoBundle 'osyo-manga/vim-over'

" color scheme
	NeoBundle 'altercation/vim-colors-solarized'
	NeoBundle 'altercation/solarized'
	NeoBundle 'jpo/vim-railscasts-theme'
	NeoBundle 'nanotech/jellybeans.vim'
	NeoBundle 'tomasr/molokai'
	NeoBundle 'vim-scripts/newspaper.vim'
	NeoBundle 'ujihisa/unite-colorscheme'
	NeoBundle 'flazz/vim-colorschemes'


" MarkDown を HTMLに変換
" NeoBundle 'yaasita/ore_markdown', {
"      \ 'build' : {
"     \     'windows' : 'bundle install --gemfile .\bin\Gemfile',
"     \     'mac' : 'bundle install --gemfile ./bin/Gemfile',
"     \     'unix' : 'bundle install --gemfile ./bin/Gemfile'
"     \    },
"     \ }

" Installation check.
	NeoBundleCheck

endfunction

function! s:bundle_settings()

"------------------------------------
" ColorScheme
"------------------------------------
	syntax enable
	set background=dark
	colorscheme railscasts
	if $TERM == "xterm-256color" || $TERM == "screen-256color" || $COLORTERM == "gnome-terminal"
		set t_Co=256
	endif

"------------------------------------
" Insert時のColor
"------------------------------------

	au InsertEnter * hi StatusLine guifg=DarkBlue guibg=DarkYellow gui=none ctermfg=Blue ctermbg=Yellow cterm=none
	au InsertLeave * hi StatusLine guifg=White guibg=Black gui=none ctermfg=White ctermbg=Black cterm=none

"------------------------------------
" UniteColorScheme
" カラースキームの切り替えを簡単にする
"------------------------------------
	nnoremap <Leader>uc :<C-u>Unite colorscheme -auto-preview<CR>

"------------------------------------
" emmet
"------------------------------------
	filetype plugin indent on

	let g:user_emmet_settings = {
	\  'lang' : 'ja',
	\  'html' : {
	\    'filters' : 'html',
	\    'indentation' : ''
	\  },
	\  'php' : {
	\    'extends' : 'html',
	\    'filters' : 'html,c',
	\  },
	\  'css' : {
	\    'filters' : 'fc',
	\  },
	\  'javascript' : {
	\    'snippets' : {
	\      'jq' : "$(function() {\n\t${cursor}${child}\n});",
	\      'jq:each' : "$.each(arr, function(index, item)\n\t${child}\n});",
	\      'fn' : "(function() {\n\t${cursor}\n})();",
	\      'tm' : "setTimeout(function() {\n\t${cursor}\n}, 100);",
	\      'jqcdn' : "<script src='https://code.jquery.com/jquery-2.1.1.min.js'></script>",
	\      'bootstrap' : "<script src ='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js'></script>",
	\    },
	\  },
	\ 'java' : {
	\  'indentation' : '  ',
	\  'snippets' : {
	\   'main': "public static void main(String[] args) {\n\t|\n}",
	\   'println': "System.out.println(\"|\");",
	\   'class': "public class | {\n}\n",
	\   'jqcdn': "<script src='https://code.jquery.com/jquery-2.1.1.min.js'></script>",
	\  },
	\ },
	\}

"------------------------------------
" snippet
"------------------------------------
" <TAB>: completion.
" inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
	inoremap <expr><S-TAB>  pumvisible() ? "\<C-p>" : "\<S-TAB>"

" Plugin key-mappings.
	imap <C-k>     <Plug>(neosnippet_expand_or_jump)
	smap <C-k>     <Plug>(neosnippet_expand_or_jump)

" SuperTab like snippets behavior.
" imap <expr><TAB> neosnippet#jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : pumvisible() ? "\<C-n>" : "\<TAB>"
	imap <expr><TAB> pumvisible() ? "\<C-n>" : neosnippet#jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
	smap <expr><TAB> neosnippet#jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

" For snippet_complete marker.
	if has('conceal')
	set conceallevel=2 concealcursor=i
	endif

"------------------------------------
" javascript syntax
"------------------------------------
	au FileType javascript call JavaScriptFold()

"------------------------------------
" Align
"------------------------------------
" Alignを日本語環境で使用するための設定
	let g:Align_xstrlen = 3

"------------------------------------
" neocomplcache（自動補完）を有効化
"------------------------------------

	let g:neocomplcache_enable_at_startup = 1

"------------------------------------
" Vim-over
"------------------------------------
" over.vim の　呼び出し
	nnoremap <silent> <Leader>m :OverCommandLine<CR>
" カーソル下の単語をハイライト付きで置換
	nnoremap sub :OverCommandLine<CR>%s/<C-r><C-w>//g<Left><Left>

" コピーした文字列をハイライト付きで置換
	nnoremap subp y:OverCommandLine<CR>%s!<C-r>=substitute(@0, '!', '\\!', 'g')<CR>!!gI<Left><Left><Left>

" OverCommandLineNoremap {lhs} {rhs}
" {lhs} を {rhs} のキーとして割り当てる
" ここで設定する事ができるキーは1文字、
" もしくは修飾キー+1文字のみ割り当てることができます
"	OverCommandLineNoremap <A-b> <C-b>
"	OverCommandLineNoremap <A-f> <C-f>

endfunction


function! s:custom_settings()
"------------------------------------
" Window
"------------------------------------
	nnoremap sh <C-w>h
	nnoremap sj <C-w>j
	nnoremap sk <C-w>k
	nnoremap sl <C-w>l
	nnoremap sH <C-w>H
	nnoremap sJ <C-w>J
	nnoremap sK <C-w>K
	nnoremap sL <C-w>L

" height
	nnoremap + <C-w>+
	nnoremap - <C-w>-
" width
	nnoremap ) <C-w>>
	nnoremap ( <C-w><LT>

"------------------------------------
" Indentation
"------------------------------------
	set autoindent  " 自動でインデント
	set smartindent " 新しい行のインデントを現在行と同じ数に
	"set smarttab

	if has("autocmd")
		autocmd FileType * set formatoptions-=ro " 改行時にコメントしない

		" expandtab = et タブ文字を空白に展開する
		" tabstop = ts ファイル内の <Tab> が対応する空白の数
		" softtabstop = sts タブキーを押したときに挿入される空白の量
		" shiftwidth = sw 自動インデントの各段階に使われる空白の数

		autocmd FileType php        setlocal ts=2 sts=2 sw=2 noexpandtab
		autocmd FileType c          setlocal ts=4 sw=4 noexpandtab cindent
		autocmd FileType java       setlocal ts=4 sts=4 sw=4 et
		autocmd FileType sh         setlocal ts=2 sts=2 sw=2 et
		autocmd FileType sql        setlocal ts=2 sts=2 sw=2 et
		autocmd FileType html,xhtml,css,javascript      setlocal ts=2 sts=2 sw=2 et

		autocmd BufNewFile,BufRead *.html  setlocal ft=xhtml

	endif

"------------------------------------
" Other
"------------------------------------
" .vimrcや.gvimrcを編集するためのKey-mappingを定義する
	nnoremap <silent> <Space>ev  :<C-u>edit $MYVIMRC<CR>
	nnoremap <silent> <Space>eg  :<C-u>edit $MYGVIMRC<CR>

	cnoremap <C-p> <Up>
	cnoremap <C-n> <Down>
	nnoremap <silent> [b :bprevious<CR>
	nnoremap <silent> ]b :bnext<CR>
	nnoremap <silent> [B :bfirst<CR>
	nnoremap <silent> ]B :blast<CR>

" insert mode での移動
	inoremap  <C-e> <END>
	inoremap  <C-a> <HOME>

" インサートモードでもhjklで移動
	inoremap <C-j> <Down>
	inoremap <C-k> <Up>
	inoremap <C-h> <Left>
	inoremap <C-l> <Right>

" インサートモードのyyでEsc
	inoremap <silent> yy <ESC>
	inoremap <silent> <C-j> <esc>

" 括弧、クォーテーション自動補完
	inoremap { {}<LEFT>
	inoremap [ []<LEFT>
	inoremap ( ()<LEFT>
	inoremap " ""<LEFT>
	inoremap ' ''<LEFT>
	vnoremap { "zdi^V{<C-R>z}<ESC>
	vnoremap [ "zdi^V[<C-R>z]<ESC>
	vnoremap ( "zdi^V(<C-R>z)<ESC>
	vnoremap " "zdi^V"<C-R>z^V"<ESC>
	vnoremap ' "zdi'<C-R>z'<ESC>

" autoclose で置き換え
	"inoremap ( ()
	"inoremap [ []
	"inoremap { {}
	"inoremap " ""
	"inoremap ' ''
	inoremap nfunc function(){};<LEFT><LEFT>

" 0, -で行頭、行末へ
	nmap 0 ^
	nmap - $

" ビジュアルモード時vで行末まで選択
	vnoremap v $h

" buftabs（常にバッファ番号を表示）の設定
	let buftabs_only_basename = 1
	let buftabs_in_statusline = 1
" 保存時に行末の空白を除去する
	autocmd BufWritePre * :%s/\s\+$//ge

endfunction

function! s:basic_settings()

set nocompatible
syntax on

"------------------------------------
" Encode
"------------------------------------
	set fileformats=unix,dos,mac " 改行コード
	set encoding=utf-8 " デフォルトエンコーディング
	set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc  " ワイルドカードで表示するときに優先度を低くする拡張子

"------------------------------------
" Basic
"------------------------------------
	let mapleader="," " <Leader>キー
	set scrolloff=5 " スクロール時の余白確保
	set textwidth=0 " 自動で折り返しをしない
	set autoread " 自動読み直し
	set hidden " 編集中でも他のファイルを開けるようにする
	set backspace=indent,eol,start "バックスペースキーで削除できるものを指定
	"set formatoptions=lmoq "テキスト整形オプション，マルチバイト系を追加
	set vb t_vb= " ビープ音を鳴らさない
	set browsedir=buffer " Exploreの初期ディレクトリ
	"set whichwrap=b,s,h,l,<,>,[,] " カーソルを行頭、行末で止まらないようにする
	set showcmd " コマンドをステータス行に表示
	set showmode " 現在のモードを表示
	set modelines=0 " モードラインは無効

"------------------------------------
" Show
"------------------------------------
	set title " タイトルを表示する
	set ruler " ルーラーを表示
	set laststatus=2 " 常にステータラスラインを表示
	set showmatch " 対応する括弧をハイライト
	set number " 行番号表示
	set list " 不可視文字表示
	set listchars=tab:>\ ,extends:<
	" 全角スペースの表示
	highlight ZenkakuSpace cterm=underline ctermfg=red guibg=darkgray
	match ZenkakuSpace /　/
	set cursorline " カーソル行をハイライト
	set ttyfast " 高速ターミナル接続を行う

"------------------------------------
" Search
"------------------------------------
	set incsearch " インクリメンタルサーチ
	set ignorecase " 大文字小文字無視
	set smartcase " 大文字は区別する
	set hlsearch " 検索文字をハイライト
	nmap \q :nohlsearch<CR>

"------------------------------------
" Backup
"------------------------------------
	set nobackup " バックアップなし
	set noswapfile " スワップファイルを作らない


endfunction

function! s:folding_settings()
"------------------------------------
" folding
"------------------------------------
"	set foldenable
	set foldmethod=syntax
	set foldopen=block,hor,mark,percent,quickfix,search,tag,undo
	set foldlevel=0
	set foldnestmax=2
	set foldcolumn=2
endfunction


function! s:InitNeoBundle()
	if isdirectory(expand("~/.vim/bundle/neobundle.vim/"))
		filetype plugin indent off
		if has('vim_starting')
			set runtimepath+=~/.vim/bundle/neobundle.vim/
		endif
		try
			call neobundle#rc(expand('~/.vim/bundle/'))
			call s:LoadBundles()
		catch
			call s:WithoutBundles()
		endtry
	else
		call s:WithoutBundles()
	endif

	filetype indent plugin on

	call s:basic_settings()
	call s:bundle_settings()
	call s:custom_settings()
"	call s:folding_settings()

endfunction

function! s:WithoutBundles()
	colorscheme evening
" その他の処理
endfunction

call s:InitNeoBundle()
